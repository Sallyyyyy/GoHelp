--SQLQuery1 請列出每個借閱人每年借書數量，並依借閱人編號和年度做排序
--將COUNT(*)改掉
	USE GSSWEB
	GO
	SELECT BLR.KEEPER_ID AS [KeepId],MM.USER_CNAME AS [CName],MM.USER_ENAME AS [EName]
		   ,DATEPART(YEAR,BLR.LEND_DATE) AS [BorrowYear],COUNT(DATEPART(YEAR,BLR.LEND_DATE)) AS BorrowCnt
	FROM dbo.BOOK_LEND_RECORD AS BLR 
	INNER JOIN dbo.MEMBER_M AS MM
		ON BLR.KEEPER_ID=MM.USER_ID
	GROUP BY BLR.KEEPER_ID,MM.USER_CNAME, MM.USER_ENAME,DATEPART(YEAR,BLR.LEND_DATE)
	ORDER BY BLR.KEEPER_ID,DATEPART(YEAR,BLR.LEND_DATE)

--SQLQuery2  列出最受歡迎的書前五名(借閱數量最多前五名)
	USE GSSWEB
	GO
	SELECT Top 5 BLR.BOOK_ID AS [BookId],BD.BOOK_NAME AS [BookName],Count(*) AS [Qty]
	FROM dbo.BOOK_LEND_RECORD AS BLR
	INNER JOIN dbo.BOOK_DATA AS BD
		ON BLR.BOOK_ID=BD.BOOK_ID
	GROUP BY BLR.BOOK_ID,BD.BOOK_NAME
	ORDER BY Qty Desc

--SQLQuery3  以一季列出2019年每一季書籍借閱書量
--縮短CASE..WHEN語法
	USE GSSWEB
	GO
	SELECT QD.MM AS [Quarter],COUNT(*) AS [Cnt]
	FROM
		(SELECT  CASE DATEPART(QUARTER,BLR.LEND_DATE)
				WHEN '1'  THEN '2019/01~2019/03'
				WHEN '2'  THEN '2019/04~2019/06'
				WHEN '3'  THEN '2019/07~2019/09'
				ELSE '2019/10~2019/12'
				END AS [MM]
				, COUNT(*) AS [Cnt]
		FROM dbo.BOOK_LEND_RECORD AS BLR
		WHERE DATEPART(YEAR,BLR.LEND_DATE) = '2019'
		GROUP BY BLR.LEND_DATE) AS QD
	GROUP BY QD.MM

--SQLQuery4  撈出每個分類借閱數量前三名書本及數量
	USE GSSWEB
	GO
	WITH CntTable AS(
		SELECT BC.BOOK_CLASS_NAME AS [BookClass],BD.BOOK_ID AS [BookId],BD.BOOK_NAME AS BookName,count(*) AS [Cnt]
		FROM dbo.BOOK_LEND_RECORD AS BLR
		INNER JOIN dbo.BOOK_DATA AS BD ON BLR.BOOK_ID = BD.BOOK_ID
		INNER JOIN dbo.BOOK_CLASS AS BC ON BD.BOOK_CLASS_ID = BC.BOOK_CLASS_ID
		GROUP BY BC.BOOK_CLASS_NAME,BD.BOOK_ID,BD.BOOK_NAME
	)
	SELECT *
	FROM(
		SELECT ROW_NUMBER() OVER(PARTITION BY BookClass ORDER BY Cnt desc) AS Row#,CT.*
		FROM CntTable as CT
		) as A
	WHERE Row#<=3

--SQLQuery5  請列出 2016, 2017, 2018, 2019 各書籍類別的借閱數量比較
	USE GSSWEB
	GO
	CREATE FUNCTION dbo.getCNT (@yy nvarchar(10))  
	RETURNS TABLE  
	AS  
	RETURN   
	(  
		SELECT BD.BOOK_CLASS_ID,BC.BOOK_CLASS_NAME,count(*) AS [cnt]
		FROM dbo.BOOK_LEND_RECORD AS BLR
		INNER JOIN dbo.BOOK_DATA AS BD ON BLR.BOOK_ID=BD.BOOK_ID
		INNER JOIN dbo.BOOK_CLASS AS BC ON BD.BOOK_CLASS_ID = BC.BOOK_CLASS_ID
		WHERE DATEPART(YEAR,BLR.LEND_DATE) = @yy
		GROUP BY BD.BOOK_CLASS_ID,BC.BOOK_CLASS_NAME
	); 
	SELECT BC.BOOK_CLASS_ID as ClassId,BC.BOOK_CLASS_NAME as ClassName,
			CASE WHEN CNT2016.cnt IS NULL  THEN 0 ELSE CNT2016.cnt END AS [CNT2016], 
			CASE WHEN CNT2017.cnt IS NULL  THEN 0 ELSE CNT2017.cnt END AS [CNT2017],
			CASE WHEN CNT2018.cnt IS NULL  THEN 0 ELSE CNT2018.cnt END AS [CNT2018],
			CASE WHEN CNT2019.cnt IS NULL  THEN 0 ELSE CNT2019.cnt END AS [CNT2019]
	FROM dbo.BOOK_CLASS as BC
	LEFT JOIN dbo.getCNT('2016') AS CNT2016 ON  BC.BOOK_CLASS_ID = CNT2016.BOOK_CLASS_ID
	LEFT JOIN dbo.getCNT('2017') AS  CNT2017 ON  BC.BOOK_CLASS_ID = CNT2017.BOOK_CLASS_ID
	LEFT JOIN dbo.getCNT('2018') AS  CNT2018 ON  BC.BOOK_CLASS_ID = CNT2018.BOOK_CLASS_ID
	LEFT JOIN dbo.getCNT('2019') AS  CNT2019 ON  BC.BOOK_CLASS_ID = CNT2019.BOOK_CLASS_ID
	ORDER BY ClassId

--SQLQuery6  請使用 PIVOT 語法列出2016, 2017, 2018, 2019 各書籍類別的借閱數量比較
	USE GSSWEB
	GO
	SELECT ClassID,ClassName
		   ,ISNULL([2016],0) AS [CNT2016],ISNULL([2017],0) AS [CNT2017]
		   ,ISNULL([2018],0) AS [CNT2018],ISNULL([2019],0) AS [CNT2019]
	FROM
		(SELECT BD.BOOK_CLASS_ID AS [ClassID],BC.BOOK_CLASS_NAME as [ClassName],
		DATEPART(YEAR,BLR.LEND_DATE) AS [year],COUNT(*) AS Cnt
		FROM dbo.BOOK_LEND_RECORD AS BLR
		INNER JOIN dbo.BOOK_DATA AS BD ON BLR.BOOK_ID=BD.BOOK_ID
		INNER JOIN dbo.BOOK_CLASS AS BC ON BD.BOOK_CLASS_ID = BC.BOOK_CLASS_ID
		GROUP BY BD.BOOK_CLASS_ID,BC.BOOK_CLASS_NAME,DATEPART(YEAR,BLR.LEND_DATE)) AS Y
	PIVOT (SUM(Cnt) FOR [year] IN ([2016],[2017],[2018],[2019])) AS pvt
	ORDER BY ClassID

--SQLQuery7  請使用 PIVOT 語法列出 2016, 2017, 2018, 2019 各書籍類別的借閱數量比較 (動態分析所有年度)
--更改保留字命名
	USE GSSWEB
	GO
	--DECLARE @ColumnGroup
	DECLARE @ColumnGroup NVARCHAR(MAX)
	SELECT @ColumnGroup = COALESCE(@ColumnGroup + ',' ,'' ) + QUOTENAME(CONVERT(NVARCHAR, Y1.Year1)) 
	FROM (
		SELECT DISTINCT DATEPART(YEAR,BLR.LEND_DATE) AS [Year1]
		FROM dbo.BOOK_LEND_RECORD AS BLR
		) AS Y1
	GROUP BY Y1.Year1

	--DECLARE @ColumnSelect
	DECLARE @ColumnSelect NVARCHAR(MAX)  = ''
	SELECT @ColumnSelect += ',ISNULL(['+CONVERT(NVARCHAR, Y2.Year1) + '],0) as CNT' + CONVERT(NVARCHAR, Y2.Year1)
	FROM (
		SELECT DISTINCT BD.BOOK_CLASS_ID AS [ClassID],BC.BOOK_CLASS_NAME AS [ClassName]
			   ,DATEPART(YEAR,BLR.LEND_DATE) AS [Year1],COUNT(*) AS Cnt
		FROM dbo.BOOK_LEND_RECORD AS BLR
		INNER JOIN dbo.BOOK_DATA AS BD ON BLR.BOOK_ID=BD.BOOK_ID
		INNER JOIN dbo.BOOK_CLASS AS BC ON BD.BOOK_CLASS_ID = BC.BOOK_CLASS_ID
		GROUP BY BD.BOOK_CLASS_ID,BC.BOOK_CLASS_NAME,DATEPART(YEAR,BLR.LEND_DATE)
		) AS Y2
	GROUP BY Y2.Year1
	--PIVOT
	DECLARE @PIVOT AS NVARCHAR(MAX)
	SET @PIVOT = 
	   'SELECT ClassID,ClassName'+@ColumnSelect+'
		FROM
		   (SELECT BD.BOOK_CLASS_ID AS [ClassID],BC.BOOK_CLASS_NAME AS [ClassName]
				    ,DATEPART(YEAR,BLR.LEND_DATE) AS [year],COUNT(*) AS Cnt
			FROM dbo.BOOK_LEND_RECORD AS BLR
			INNER JOIN dbo.BOOK_DATA AS BD ON BLR.BOOK_ID=BD.BOOK_ID
			INNER JOIN dbo.BOOK_CLASS AS BC ON BD.BOOK_CLASS_ID = BC.BOOK_CLASS_ID
			GROUP BY BD.BOOK_CLASS_ID,BC.BOOK_CLASS_NAME,DATEPART(YEAR,BLR.LEND_DATE)
			) AS Y
		PIVOT (SUM(Cnt) FOR [year] IN ('+@ColumnGroup+')) AS pvt
		ORDER BY ClassID'
	EXEC sys.sp_executesql @PIVOT;

--SQLQuery8
--請查詢出李四的借書紀錄，其中包含書本ID、購書日期(yyyy/mm/dd)、借閱日期(yyyy/mm/dd)、書籍類別(id-name)、借閱人(id-cname(ename))、狀態(id-name)、購書金額
--修改購書日期及購書金額格式
	USE GSSWEB
	GO
	SELECT  BD.BOOK_ID AS [書本ID]
		   ,FORMAT( BD.BOOK_BOUGHT_DATE, 'yyyy/M/dd') AS [購書日期]
		   ,CONVERT(varchar(100), BLR.LEND_DATE, 111) AS [借閱日期]
		   ,BC.BOOK_CLASS_ID+'-'+BC.BOOK_CLASS_NAME AS [書籍類別]
		   ,MM.USER_ID+'-'+MM.USER_CNAME+'('+MM.USER_ENAME+')' AS [借閱人]
		   ,CD.CODE_ID+'-'+CD.CODE_NAME AS [狀態]
		   ,FORMAT( BD.BOOK_AMOUNT, '#,#') AS [購書金額]
	FROM dbo.BOOK_DATA AS BD
		INNER JOIN dbo.BOOK_LEND_RECORD AS BLR ON BD.BOOK_ID = BLR.BOOK_ID
		INNER JOIN dbo.BOOK_CLASS AS BC ON BD.BOOK_CLASS_ID = BC.BOOK_CLASS_ID
		INNER JOIN dbo.BOOK_CODE AS CD ON BD.BOOK_STATUS = CD.CODE_ID
		INNER JOIN dbo.MEMBER_M AS MM ON BLR.KEEPER_ID = MM.USER_ID
	WHERE MM.USER_CNAME='李四'
	AND   CD.CODE_TYPE = 'BOOK_STATUS' --避免找到codeType為血型的資料
	ORDER BY [購書金額] DESC


--SQLQuery9  新增一筆借閱紀錄，借書人為李四，書本ID為2004，並修改借閱日期為2019/01/02
--使用TRANSACTION包起來
	USE GSSWEB
	GO
	BEGIN TRY 
		BEGIN TRANSACTION     
			/*新增*/
			INSERT INTO dbo.BOOK_LEND_RECORD(BOOK_ID, KEEPER_ID,LEND_DATE) 
			VALUES ('2004','0002', GETDATE());
			/*修改*/
			UPDATE dbo.BOOK_LEND_RECORD 
			SET LEND_DATE='2019/01/02'
			WHERE KEEPER_ID = '0002';
		COMMIT TRANSACTION
	END TRY
	BEGIN CATCH
		SELECT ERROR_NUMBER() AS ErrNum, ERROR_MESSAGE() AS ErrMsg;
		ROLLBACK TRANSACTION
	END CATCH;

--SQLQuery10  請將題9新增的借閱紀錄(書本ID=2004)刪除
	USE GSSWEB
	GO
	/*確認要刪除的條件和刪除的物件相符合*/
		SELECT *
		FROM dbo.BOOK_LEND_RECORD
		WHERE dbo.BOOK_LEND_RECORD.BOOK_ID = '2004'

	/*刪除*/
		DELETE FROM dbo.BOOK_LEND_RECORD 
		WHERE dbo.BOOK_LEND_RECORD.BOOK_ID = '2004'
		AND  dbo.BOOK_LEND_RECORD.KEEPER_ID = '0002'

--SQLQuery7_使用Procedures
	USE GSSWEB
	GO
	--宣告變數取得年份
		DECLARE @ColumnGroup NVARCHAR(MAX)
		SELECT @ColumnGroup = COALESCE(@ColumnGroup + ',' ,'' ) + QUOTENAME(CONVERT(NVARCHAR, A.year)) 
		FROM (SELECT BD.BOOK_CLASS_ID AS [ClassID],BC.BOOK_CLASS_NAME as [ClassName],
			DATEPART(YEAR,BLR.LEND_DATE) AS [year],COUNT(*) AS Cnt
			FROM dbo.BOOK_LEND_RECORD AS BLR
			INNER JOIN dbo.BOOK_DATA AS BD ON BLR.BOOK_ID=BD.BOOK_ID
			INNER JOIN dbo.BOOK_CLASS AS BC ON BD.BOOK_CLASS_ID = BC.BOOK_CLASS_ID
			GROUP BY BD.BOOK_CLASS_ID,BC.BOOK_CLASS_NAME,DATEPART(YEAR,BLR.LEND_DATE)) AS A
		GROUP BY A.year
	--呼叫procedures帶入年份變數
		EXEC dbo.getYears @ResYears = @ColumnGroup 
		GO
	--建立一個procedures FOR PIVOT
		CREATE PROCEDURE dbo.getYears(@ResYears AS NVARCHAR(MAX))
		AS
		DECLARE @PIVOT AS NVARCHAR(MAX)
		SELECT @PIVOT = 'SELECT ClassID,ClassName,ISNULL([2016],0) as CNT2016,ISNULL([2017],0) as CNT2017,ISNULL([2018],0) as CNT2018,ISNULL([2019],0) as CNT2019
				FROM(
					SELECT BD.BOOK_CLASS_ID as [ClassID],BC.BOOK_CLASS_NAME as [ClassName],
					DATEPART(YEAR,BLR.LEND_DATE) as [year],COUNT(*) AS Cnt
					FROM dbo.BOOK_LEND_RECORD as BLR
					INNER JOIN dbo.BOOK_DATA as BD ON BLR.BOOK_ID=BD.BOOK_ID
					INNER JOIN dbo.BOOK_CLASS as BC ON BD.BOOK_CLASS_ID = BC.BOOK_CLASS_ID
					GROUP BY BD.BOOK_CLASS_ID,BC.BOOK_CLASS_NAME,DATEPART(YEAR,BLR.LEND_DATE)) AS Y
				PIVOT (SUM(Cnt) FOR [year] IN ('+@ResYears+')) AS pvt
				ORDER BY ClassID'
		EXEC sys.sp_executesql @PIVOT;
		GO




